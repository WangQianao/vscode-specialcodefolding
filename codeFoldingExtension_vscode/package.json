{
  "name": "specialcodefolding",
  "displayName": "Special Code Folding",
  "description": "Special Code folding plugin based-on-different-concerns,such as VariableDeclaration,BranchControl and so on",
  "version": "1.0.1",
  "publisher": "WangQianao",
  "author": "WangQianao",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/WangQianao/vscode-specialcodefolding.git"
  },
  "icon": "vscode-specialcodefolding-icon.png",
  "extensionKind": [
    "ui"
  ],
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:javascript"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "specialcodefolding.fold",
        "title": "FoldCode"
      },
      {
        "command": "specialcodefolding.expand",
        "title": "ExpandCode"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "specialcodefolding.fold",
          "group": "navigation"
        },
        {
          "command": "specialcodefolding.expand",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "codeFolding",
      "properties": {
        "codeFolding.kind": {
          "type": "string",
          "default": "VariableDeclaration",
          "enum": [
            "VariableDeclaration",
            "BranchControl",
            "ConcreteAction",
            "FunctionParams",
            "Returnvalue",
            "Exception",
            "CodeSummary"
          ],
          "description": "codeFolding kind",
          "enumDescriptions": [
            "codeFolding based on VariableDeclaration",
            "codeFolding based on BranchControl",
            "codeFolding based on ConcreteAction",
            "codeFolding based on FunctionParams",
            "codeFolding based on Returnvalue",
            "codeFolding based on Exception",
            "codeSummary"
          ]
        },
        "codeFolding.way":{
          "type": "string",
          "default": "SELECTION",
          "enum": [
            "SELECTION",
            "ALL"
          ],
          "description": "codeFolding way",
          "enumDescriptions": [
            "codeFolding what you select",
            "codeFolding all"
           
          ]
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.73.0",
    "@typescript-eslint/eslint-plugin": "^5.38.1",
    "@typescript-eslint/parser": "^5.38.1",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.24.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.8.4"
  },
  "dependencies": {
    "@babel/parser": "^7.20.3",
    "@babel/traverse": "^7.20.1",
    "@babel/types": "^7.20.2",
    "axios": "^1.3.3"
  }
}
